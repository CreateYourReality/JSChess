*{
    margin:0;
    padding:0;
    box-sizing: border-box;
}


@mixin playerDefault{
    margin: 5vh 0;
    height: 10vh;
    border-radius: 15px;
    border:3px groove black;
}

@mixin flexME{
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin fieldDefault{
    opacity: 70%;
    border: 1px solid black;
    border-radius: 5px;
    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
}

html{
    font-size: 62.5%;
}

main{
    @include flexME();
    flex-direction: column;
    width: 100%;
    height: 100vh;
}

    img{
        width: 40px;
        cursor:pointer;
    }


.chess-board{
    display: grid;
    grid-template-columns: repeat(8,1fr);
    grid-template-rows: repeat(8,1fr);
    border: 3px dotted blue;
    div{
        @include flexME();
        width: 60px;
        height: 60px;
    }  
}

.white-player{
    @include playerDefault();
    @include flexME();
    background-color: rgb(209, 227, 233);
  
}

.black-player{
    @include playerDefault();
    @include flexME();
    background-color: rgb(243, 200, 200);
 
}

//+++ ANDERS MACHEN +++ //

.chessField:nth-child(n+1):nth-child(-n+8):nth-child(ODD) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+9):nth-child(-n+16):nth-child(EVEN) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+17):nth-child(-n+24):nth-child(ODD) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+25):nth-child(-n+32):nth-child(EVEN) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+33):nth-child(-n+40):nth-child(ODD) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+41):nth-child(-n+48):nth-child(EVEN) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+49):nth-child(-n+56):nth-child(ODD) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+57):nth-child(-n+64):nth-child(EVEN) {
    background-color: black;
    color:white;
}

.chessField:nth-child(n+1):nth-child(-n+64):hover {
    @include fieldDefault();
    background-color: blue;
    color:red;
}

.chessField:nth-child(n+1):nth-child(-n+64).active {
    @include fieldDefault();
    background-color: orange;
    color:green;
}

.chessField:nth-child(n+1):nth-child(-n+64).active2 {
    @include fieldDefault();
    background-color: orangered;
    color:green;
}

.chessField:nth-child(n+1):nth-child(-n+64).canAttack {
    @include fieldDefault();
    background-color: red;
    color:green;
}




